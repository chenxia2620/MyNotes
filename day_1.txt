第一天：做点什么吧。
flag:
    3个月时间成为一个合格的前端工程师。
    合格。
    正式开始。
**2018.5.30**

第二天：制作简历。
    写了一个简单的简历网页：resume.html。
    继续努力。
**2018.5.30**

第三天：让简历有点色彩。
CSS(层叠样式表)中字体属性：
    颜色：color
    字体种类：font-family {
        网页安全字体：
            Arial                sans-serif    英文黑体
            "Courier New"        monospace     等宽字体
            Georgia              serif         乔治亚字体
            "Times New Roman"    serif         新罗马字体
            "Trebuchet MS"       sans-serif    投石机女士字体
            Verdana              sans-serif    无衬线字体
        CSS常用字体名称：
            serif       有衬线字体
            sans-serif  无衬线字体
            monospace   等宽字体
            cursive     手写体，草书
            fantasy     幻想字体，用于装饰
        字体栈：font stack
            提供多种字体可以选择，按顺位顺序。
            eg: p {font-family: serif, sans-serif, monospace;}
    }
    字体大小：font-size {
        元素的font-size属性是从该元素的父元素继承的。
        常用单位：
            px      像素，绝对单位
            emS     相对单位，1em等于父元素上设置的字体大小
            remS    相对单位，1rem等于HTML中根元素的字体大小，而不是父元素
        浏览器的font-size标准设置的值为：16px。
        当调整文本大小时，可将文档的基础font-size设置为10px：
            eg: html {font-size: 10px;}
    }
    字体样式：font-style {
        打开/关闭文本斜体。
            normal     设置普通字体
            italic     设置斜体，若斜体可用
            oblique    设置斜体模拟版本
    }
    字体粗细：font-weight {
        设置文本粗体大小。
            normal     普通
            bold       加粗
            lighter    比父元素粗体更细
            bolder     比父元素粗体更粗
            100-900    数值粗体值，精细的粒度控制
    }
    文本转换：text-transform {
        设置要转换的字体。
            none          防止任何的转型
            uppercase     将所有文本转为大写
            lowercase     将所有文本转为小写
            capitalize    将所有单词让其首字母大写
            full-width    将所有字形转换为固定宽度的正方形，类似等宽字体，允许对齐
    }
    文本装饰：text-decoration {
        设置/取消字体上的文本装饰。
            none            取消已经存在的任何文本装饰
            underline       文本下划线
            overline        文本上划线
            line-through    穿过文本的线
        可一次接受多个值
    }
    文字阴影: text-shadow {
        为文本应用阴影，4个属性如下：
            水平偏移    向左/右偏移，必须指定值，px
            垂直偏移    向上/下偏移，必须指定值，px
            模糊半径    更高值意味阴影分散更广泛，默认为0，即无模糊
            基础颜色    默认为black
        eg: a {text-shadow: -1px -1px 1px #aaa;}
    }
文本布局
    文本对齐： text-align {
        控制文本如何和它所在的内容盒子对齐。
            left       左对齐文本
            right      右对齐文本
            center     居中文字
            justify    使文本展开，改变单词之间的差距，使所有文本行的宽度相同
    }
    行高： line-height {
        设置文本每行之间的高度。
            设置一个无单位的值，作为乘数，较推荐。
            无单位的值 乘以 font-size 获得 line-height
            推荐行高：1.5-2(双倍间距) 
            eg: p {line-height: 1.5;}
    }
    字母和字间距： letter-spacing和word-spacing {
        设置文本中字母与字母的间距、或字与字的间距。
        eg: p {letter-spacing: 2px;word-spacing: 4px;}
    }
    文本首行缩进： text-indent {
        规定一个元素首行文本内容之前应该有多少水平空格。
    }
Font简写 {
    font简写顺序：
        font-style, font-variant, font-weight, font-stretch, font-size, line-height, font-family
    eg: p {font: italic normal bold normal 3em/1.5 Arial, sans-serif;}
}
**2018.5.30**

第四天：从背景开始
元素的背景是指，在元素内容、内边距和边界下层的区域。 { 
    背景颜色： background-color {
        为背景设置一个纯色
        大多数元素的默认颜色是：transparent    透明
        eg: p {background-color: green;}
    }
    背景图像： background-image {
        指定在元素背景中显示的图像
        路径 {
            url()函数    以一个路径为参数获取一个静态文件的插入
            eg: p {background-image: url(img/chen.jpg);}
        }
        默认情况下，图像在水平和垂直方向都是重复的
        颜色渐变 {
            线性渐变    linear-gradient()函数
            eg: div {background-img: linear-gradient(to bottom, orange, yellow);}    
                从上到下，从顶部橙色平稳过度到底部的黄色
                关键字： to bottom, to right, to bottom right, to top...
                角度值： 0deg相当于to top, 90deg相当于to right, 360deg相当于 to top...
            颜色站点    color stops
            eg: div {background-img: linear-gradient(to bottom, yellow, orange 40%, yellow);}
            重复的线性渐变  repeating-linear-gradient()函数
        }
    } 
    背景重复： background-repeat {
        指定背景图像如何重复
        默认值为：repeat
            no-repeat    图像将不会重复，只会显示一次
            repeat-x     图像将在整个背景中水平地重复
            repeat-y     图像将在整个背景下垂直地重复
        eg: p {background-repeat: no-repeat;}
    }
    背景位置： background-position {
        指定图像在元素背景中出现的位置
        通常使用两个通过空格分隔的值，指定了图像的水平x和垂直y坐标
        eg: p {background-position: 99% center;}
    }
    背景附着： background-attachment {
        当内容滚动时，指定背景的行为
            scroll    把背景修改为页面视图，在页面滚动时滚动
            fixed     固定背景，不滚动
            local     将背景设置为它所设置的元素的背景，元素滚动时滚动
    }
    背景简写： background {
        在一行中指定以上5个属性的缩写
    }
    背景尺寸： background-size{
        允许动态调整背景图像的大小
    }
    background-clip          改变背景所占用的区域
}
**2018.5.30**

NO.5 从边框记起
border {
    边框默认使用文本颜色，宽度为3px。
    简写: eg: p {border: 2px solid red;}
    普通写法 {
        设置边框一侧的宽度、样式、颜色： border-top, border-right, border-bottom, border-left
        设置边框宽度、样式、颜色，但会应用到四个边： border-width, border-style, border-color
        设置边框一侧的单独属性： border-top-width, border-right-style, border-bottom-color
    }
    边框半径： border-radius {
        圆角属性： 圆角、椭圆角
        eg: div1 {border-radius: 5px 10px 15px 20px;}    //4个边都是圆角
            div2 {border-radius: 20px / 30px;}     //椭圆角
            div3 {border-top-left-radius: 20px; border-bottom-right-radius: 30px;}
    }
    边框图像： border-image {
        指定源图像： border-image-source: url()
        设置所需切边大小： border-image-slice: number
        指定图像如何填充边框： border-image-repeat {
            stretch    默认，拉伸填满，不推荐
            repeat     重复填满
            round      重复，稍微拉伸填满，推荐
            space      重复，间隔填满
        }
        只调整边框图像： border-image-width {
            若设置小于border-width，它会在边框外，而不是填满它
        }
        定义边框内部和内边距之间额外空间的大小： border-image-ouset
        简写： eg: div {border-image: url(chen.png) 40 round;}
    }
}
**2018.5.31**